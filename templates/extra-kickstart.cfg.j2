## Create Libvirt VM with:
# sudo qemu-img create -f qcow2 /var/lib/libvirt/images/vm-pxe.qcow2 120G
# sudo virt-install --initrd-inject /mnt/nfs-isos/pxe.ks.cfg --extra-args "inst.ks=file:/pxe.ks.cfg console=tty0 console=ttyS0,115200n8" --name=pxe --vcpus "sockets=1,cores=2,threads=1" --memory=4096 --os-variant="rhel9.1" --location /mnt/nfs-isos/rhel9.1-x86_64.iso --disk "size=120,path=/var/lib/libvirt/images/vm-pxe.qcow2,cache=none,format=qcow2" --network bridge=containerLANbr0,model=virtio -v --memballoon none --cpu host-passthrough --autostart --noautoconsole --virt-type kvm --features kvm_hidden=on --controller type=scsi,model=virtio-scsi --graphics vnc,listen=0.0.0.0,tlsport=-1,defaultMode='insecure' --connect="qemu:///system"

#version=RHEL9
network --hostname={{ node.name }}.{{ node_base_domain }}

network --bootproto=static --device=enp1s0 --gateway={{ node.networking.gateway }} --ip={{ node.networking.ip }} --nameserver={{ node.networking.dns | join(',') }} --netmask={{ node.networking.mask }} --ipv6=auto --activate

lang en_US.UTF-8
keyboard  --xlayouts='us'
timezone America/New_York --utc

rootpw --iscrypted --allow-ssh {{ password_hash }}
sshkey --username=root "{{- ssh_pubkey['content'] | b64decode | trim -}}"

reboot --eject
text
# skipx

# Installing from the network: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/performing_an_advanced_rhel_installation/creating-installation-sources-for-kickstart-installations_installing-rhel-as-an-experienced-user
# Use FTP for install
# url --url=ftp://ftp_user:ftpPassword@ftp.example.com/rhv44-install-root-dir/
# Use HTTP for install
# url --url=http://server.example.com/rhv44-installation-tree-root-dir
#url --url=${VM_OS_LOCATION}
# Use NFS for install
# nfs --server=nfs://nfs_server.example.com --dir=/exports/rhv44
# Use CDROM for install
cdrom
bootloader --append="rhgb quiet crashkernel=auto"
firstboot --disable
eula --agreed


autopart --noswap --nohome --type=lvm --fstype=xfs
zerombr
clearpart --all --initlabel

selinux --enforcing
firewall --enabled --http --ssh --ftp

%packages
@^minimal-environment
kexec-tools
bash-completion
cockpit
jq
selinux-policy-devel
nano
wget
openssl
curl
haproxy
keepalived
libkeepalive
socat
s-nail
postfix
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end